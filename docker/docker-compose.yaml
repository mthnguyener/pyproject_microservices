networks:
  pyproject_microservices-network:
    name: ${USER_NAME:-default}-${NETWORK_NAME}
secrets:
  package:
    file: secrets/package.txt
  model_serving:
    file: secrets/model_serving.txt
services:
  pyproject_microservices-nginx:
    container_name: ${USER_NAME:-default}_${PROJECT_NAME}_nginx
    env_file: .env
    environment:
    - PORT_NGINX=${PORT_NGINX}
    image: nginx:alpine
    networks:
    - ${NETWORK_NAME}
    ports:
    - ${PORT_NGINX}:80
    restart: always
    volumes:
    - ../docs/_build/html:/usr/share/nginx/html:ro
  pyproject_microservices-api_gateway:
    build:
      context: ..
      dockerfile: docker/api_gateway.Dockerfile
    container_name: ${USER_NAME:-default}_${PROJECT_NAME}_api_gateway
    env_file: .env
    environment:
    - PORT_APIGATEWAY=${PORT_APIGATEWAY}
    - PORT_FRONTEND=${PORT_FRONTEND}
    - PORT_MODELSERVING=${PORT_MODELSERVING}
    image: ${PROJECT_NAME}_api_gateway
    networks:
    - ${NETWORK_NAME}
    ports:
    - ${PORT_APIGATEWAY}:${PORT_APIGATEWAY}
    volumes:
    - ../pyproject_microservices/api_gateway:/usr/src/api_gateway
    - ../pyproject_microservices/utils:/usr/src/api_gateway/api_gateway/utils
    - ../logs:/usr/src/api_gateway/logs
    - ../usr_vars:/usr/src/api_gateway/usr_vars
    - ../.yapfignore:/usr/src/api_gateway/.yapfignore
    - ./.env:/usr/src/api_gateway/docker/.env
  pyproject_microservices-front_end:
    build:
      context: ..
      dockerfile: docker/front_end.Dockerfile
    container_name: ${USER_NAME:-default}_${PROJECT_NAME}_front_end
    env_file: .env
    environment:
    - PORT_APIGATEWAY=${PORT_APIGATEWAY}
    - PORT_FRONTEND=${PORT_FRONTEND}
    - PORT_MODELSERVING=${PORT_MODELSERVING}
    image: ${PROJECT_NAME}_front_end
    networks:
    - ${NETWORK_NAME}
    ports:
    - ${PORT_FRONTEND}:8501
    restart: always
    volumes:
    - ../pyproject_microservices/front_end:/usr/src/front_end
    - ../pyproject_microservices/utils:/usr/src/front_end/front_end/utils
    - ../logs:/usr/src/front_end/logs
    - ../usr_vars:/usr/src/front_end/usr_vars
    - ../.yapfignore:/usr/src/front_end/.yapfignore
    - ./.env:/usr/src/front_end/docker/.env
  pyproject_microservices-model_serving:
    build:
      context: ..
      dockerfile: docker/model_serving.Dockerfile
      shm_size: 1g
    cap_add:
    - SYS_PTRACE
    container_name: ${USER_NAME:-default}_${PROJECT_NAME}_model_serving
    deploy:
      resources:
        reservations:
          devices:
          - capabilities:
            - gpu
    env_file: .env
    environment:
    - PORT_APIGATEWAY=${PORT_APIGATEWAY}
    - PORT_FRONTEND=${PORT_FRONTEND}
    - PORT_JUPYTER=${PORT_JUPYTER}
    - PORT_MODELSERVING=${PORT_MODELSERVING}
    - PORT_PROFILE=${PORT_PROFILE}
    image: ${PROJECT_NAME}_model_serving
    ipc: host
    networks:
    - ${NETWORK_NAME}
    ports:
    - ${PORT_JUPYTER}:${PORT_JUPYTER}
    - ${PORT_MODELSERVING}:${PORT_MODELSERVING}
    - ${PORT_PROFILE}:${PORT_PROFILE}
    restart: always
    secrets:
    - package
    - model_serving
    shm_size: 24g
    tty: true
    ulimits:
      memlock: -1
    volumes:
    - ../pyproject_microservices/model_serving:/usr/src/model_serving
    - ../pyproject_microservices/utils:/usr/src/model_serving/model_serving/utils
    - ${DATA_DIR}:/usr/src/model_serving/data
    - ../logs:/usr/src/model_serving/logs
    - ../usr_vars:/usr/src/model_serving/usr_vars
    - ../.yapfignore:/usr/src/model_serving/.yapfignore
    - ./.env:/usr/src/model_serving/docker/.env
    - model_serving-secret:/usr/src/model_serving/docker/secrets
volumes:
  model_serving-secret: null
