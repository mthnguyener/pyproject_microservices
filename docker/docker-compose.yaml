networks:
  pyproject_microservices-network:
    name: ${USER_NAME:-default}-${NETWORK_NAME}
secrets:
  package:
    file: secrets/package.txt
  service_modelserving:
    file: secrets/service_modelserving.txt
services:
  pyproject_microservices-nginx:
    container_name: ${USER_NAME:-default}_${PROJECT_NAME}_nginx
    env_file: .env
    environment:
    - PORT_NGINX=${PORT_NGINX}
    image: nginx:alpine
    networks:
    - ${NETWORK_NAME}
    ports:
    - ${PORT_NGINX}:80
    restart: always
    volumes:
    - ../docs/_build/html:/usr/share/nginx/html:ro
  pyproject_microservices-apigateway:
    build:
      context: ..
      dockerfile: docker/apigateway.Dockerfile
    container_name: ${USER_NAME:-default}_${PROJECT_NAME}_apigateway
    env_file: .env
    environment:
    - PORT_APIGATEWAY=${PORT_APIGATEWAY}
    - PORT_FRONTEND=${PORT_FRONTEND}
    - PORT_MODELSERVING=${PORT_MODELSERVING}
    image: ${PROJECT_NAME}_apigateway
    networks:
    - ${NETWORK_NAME}
    ports:
    - ${PORT_APIGATEWAY}:${PORT_APIGATEWAY}
    volumes:
    - ../service_apigateway:/usr/src/service_apigateway
    - ../utils:/usr/src/service_apigateway/utils
    - ../usr_vars:/usr/src/service_apigateway/usr_vars
    - ./.env:/usr/src/service_apigateway/docker/.env
  pyproject_microservices-frontend:
    build:
      context: ..
      dockerfile: docker/frontend.Dockerfile
    container_name: ${USER_NAME:-default}_${PROJECT_NAME}_frontend
    env_file: .env
    environment:
    - PORT_APIGATEWAY=${PORT_APIGATEWAY}
    - PORT_FRONTEND=${PORT_FRONTEND}
    - PORT_MODELSERVING=${PORT_MODELSERVING}
    image: ${PROJECT_NAME}_frontend
    networks:
    - ${NETWORK_NAME}
    ports:
    - ${PORT_FRONTEND}:8501
    restart: always
    volumes:
    - ../service_frontend:/usr/src/service_frontend
    - ../utils:/usr/src/service_frontend/utils
    - ../usr_vars:/usr/src/service_frontend/usr_vars
    - ./.env:/usr/src/service_frontend/docker/.env
  pyproject_microservices-modelserving:
    build:
      context: ..
      dockerfile: docker/modelserving.Dockerfile
      shm_size: 1g
    cap_add:
    - SYS_PTRACE
    container_name: ${USER_NAME:-default}_${PROJECT_NAME}_modelserving
    deploy:
      resources:
        reservations:
          devices:
          - capabilities:
            - gpu
    env_file: .env
    environment:
    - PORT_APIGATEWAY=${PORT_APIGATEWAY}
    - PORT_FRONTEND=${PORT_FRONTEND}
    - PORT_JUPYTER=${PORT_JUPYTER}
    - PORT_MODELSERVING=${PORT_MODELSERVING}
    - PORT_PROFILE=${PORT_PROFILE}
    image: ${PROJECT_NAME}_modelserving
    ipc: host
    networks:
    - ${NETWORK_NAME}
    ports:
    - ${PORT_JUPYTER}:${PORT_JUPYTER}
    - ${PORT_MODELSERVING}:${PORT_MODELSERVING}
    - ${PORT_PROFILE}:${PORT_PROFILE}
    restart: always
    secrets:
    - package
    - service_modelserving
    shm_size: 24g
    tty: true
    ulimits:
      memlock: -1
    volumes:
    - ${DATA_DIR}:/usr/src/service_modelserving/data
    - ../service_modelserving:/usr/src/service_modelserving
    - ../utils:/usr/src/service_modelserving/utils
    - ../usr_vars:/usr/src/service_modelserving/usr_vars
    - ./.env:/usr/src/service_modelserving/docker/.env
    - service_modelserving-secret:/usr/src/service_modelserving/docker/secrets
volumes:
  service_modelserving-secret: null
